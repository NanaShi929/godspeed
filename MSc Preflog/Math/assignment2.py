# -*- coding: utf-8 -*-
"""Assignment2.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1wjHf-NP3bWblyyJ6c0jFm-jan32EFR2T
"""

pip install numpy

import numpy as np

dice=np.random.randint(1,7,size=500)
print(dice)

slice=dice[0:10]
print(slice)

counts=np.bincount(dice)[1:7]
print(counts)
for dice , count in zip(range(1,7),counts):
  print (f"{dice}: {count}")

import matplotlib.pyplot as plt
import seaborn as sns

plt.bar(range(1,7),counts)
plt.title('Frequency of Dice Rolls')
plt.xlabel('Dice')
plt.ylabel('Count')
plt.show()

Most= np.argmax(counts) + 1
Least =np.argmin(counts) + 1
print(f"Most Frequent: {Most} ")
print(f"Least Frequent: {Least} ")

dice=np.random.randint(1,7,size=500)
total = dice.size
relative_frequency_500=counts/total
for dice , rel_feq in zip(range(1,7),relative_frequency_500):
  print (f"{dice}: {rel_feq}")

expt_prob=1/6
print("Expected Probability: ", expt_prob)
for dice , rel_feq in zip(range(1,7),relative_frequency_500):


  if rel_feq >= expt_prob:
   print (f"{dice}: yes")
  else:
    print (f"{dice}: no")

dice=np.random.randint(1,7,size=5000)
print(dice)
counts=np.bincount(dice)[1:7]
total = dice.size
relative_frequency_5000=counts/total
for dice , rel_feq in zip(range(1,7),relative_frequency_5000):
  print (f"{dice}: {rel_feq}")
expt_prob=1/6
print("Expected Probability: ", expt_prob)
for dice , rel_feq in zip(range(1,7),relative_frequency_5000):


  if rel_feq >= expt_prob:
   print (f"{dice}: yes")
  else:
    print (f"{dice}: no")

if sum(abs(relative_frequency_5000-expt_prob))<sum(abs(relative_frequency_500-expt_prob)):
  print(" 5000 is better")
else:
  print("500 is better")