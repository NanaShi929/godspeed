# -*- coding: utf-8 -*-
"""Z_test.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1mPNasBRwYlDpIgvo6mB26iTPOtDXODW9
"""

import numpy as np
from scipy.stats import norm

# Given data
# Factory A
n1 = 30
mean1 = 49.2
std1 = 1.2

# Factory B
n2 = 35
mean2 = 50.5
std2 = 1.4

# Significance level
alpha = 0.05

# 1. One-sample Z-test for Factory A against population mean = 50

# Null hypothesis: H0 -> mean = 50
# Alternative hypothesis: H1 -> mean ≠ 50

population_mean = 50

z1 = (mean1 - population_mean) / (std1 / np.sqrt(n1))
p_value1 = 2 * (1 - norm.cdf(abs(z1)))  # two-tailed test

print("One-sample Z-test for Factory A")
print(f"H0: μ = 50")
print(f"H1: μ ≠ 50")
print(f"Z-statistic: {z1:.4f}")
print(f"P-value: {p_value1:.4f}")

if p_value1 < alpha:
    print(f"Since p-value ({p_value1:.4f}) < {alpha}, we reject the null hypothesis.")
    print("Conclusion: The sample does not support the company’s claim of 50 kg.")
else:
    print(f"Since p-value ({p_value1:.4f}) >= {alpha}, we fail to reject the null hypothesis.")
    print("Conclusion: The sample supports the company’s claim of 50 kg.")
print("\n" + "="*50 + "\n")

# 2. Two-sample Z-test between Factory A and Factory B

# Null hypothesis: H0 -> mean1 = mean2
# Alternative hypothesis: H1 -> mean1 ≠ mean2

# Calculate pooled standard error
se = np.sqrt((std1**2 / n1) + (std2**2 / n2))
z2 = (mean1 - mean2) / se
p_value2 = 2 * (1 - norm.cdf(abs(z2)))  # two-tailed test

print("Two-sample Z-test between Factory A and Factory B")
print(f"H0: μ1 = μ2")
print(f"H1: μ1 ≠ μ2")
print(f"Z-statistic: {z2:.4f}")
print(f"P-value: {p_value2:.4f}")

if p_value2 < alpha:
    print(f"Since p-value ({p_value2:.4f}) < {alpha}, we reject the null hypothesis.")
    print("Conclusion: There is a significant difference between the two factories.")
else:
    print(f"Since p-value ({p_value2:.4f}) >= {alpha}, we fail to reject the null hypothesis.")
    print("Conclusion: There is no significant difference between the two factories.")