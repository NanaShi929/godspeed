# -*- coding: utf-8 -*-
"""Assignment3.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1IQq4dWDTcfTyTT6KRA-UvMoVcRcQRkwO
"""

import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
import math
from scipy.stats import binom

# Generate the coin flip simulation data
coin=np.random.randint(0,2 ,size=(1000,10))
print (coin)

print ("First 10 Outcome :\n", coin[0:10])

#0 to 100
counts_100=np.bincount(coin[0:100].flatten())[0:2]
print ("Count of each value from 0 to 100")
for coin_val , count in zip(range(0,2),counts_100):
  print (f"{coin_val}: {count}")

#0 to 1000
counts_1000=np.bincount(coin.flatten())[0:2]
print ("Count of each value from 0 to 100")
for coin_val , count in zip(range(0,2),counts_1000):
  print (f"{coin_val}: {count}")

#Bar Graph
plt.bar(range(0,2),counts_1000)
plt.title('Success VS Failure  ')
plt.xlabel('Coin Flip')
plt.ylabel('Count')
plt.xticks(range(0, 2), ['0', '1'])
plt.yticks(np.arange(0, max(counts_1000) , 500))
plt.show()

#Relative Frequency
counts_1000=np.bincount(coin.flatten())[0:2]
total = coin.size
relative_frequency=counts_1000/total
for coin_val , rel_feq in zip(range(0,2),relative_frequency):
  print (f"Relative Frequency of each value: \n{coin_val}: {rel_feq}")

#Simulated Binomial Probabilities

# Get the number of flips per experiment from the shape of the coin array
# Ensure the 'coin' array is created by running the lines above first
n = coin.shape[1]
r = np.sum(coin[0] == 1)
p=0.5
print("\n\nSimulated Binomial Probabilities:\n")
Bio_Pro=(math.factorial(n)/(math.factorial(r)*math.factorial(n-r)))*(p**r)*((1-p)**(n-r))
print(f"{Bio_Pro:.2f}")
print(f"Number of Heads: {r}")
print(f"Number of flips (n): {n}")

#Theoretical Binomial Probabilities

n = 10
p = 0.5
r = np.arange(n + 1)
binom_probs = binom.pmf(r, n, p)
for heads, prob in zip(r, binom_probs):
    print(f"P(X = {heads}) = {prob:.2f}")

# Generate the coin flip simulation data
import numpy as np
coin=np.random.randint(0,2 ,size=(1000 , 10))
print (coin[10])