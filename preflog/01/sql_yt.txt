*/mainactivity

package com.example.sql_lite;

import androidx.appcompat.app.AlertDialog;
import androidx.appcompat.app.AppCompatActivity;

import android.annotation.SuppressLint;
import android.content.Intent;
import android.database.Cursor;
import android.os.Bundle;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
import android.widget.Toast;

public class MainActivity extends AppCompatActivity {
EditText author ,title,content,publish,postid;

Button insert,update,delete,view,listview;
DBHelper dbHelper;
    @SuppressLint("MissingInflatedId")
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        postid=findViewById(R.id.postid);
        author=findViewById(R.id.author);
        title=findViewById(R.id.title);
        content=findViewById(R.id.content);
        publish=findViewById(R.id.publish);
        insert=findViewById(R.id.insert);
        update=findViewById(R.id.update);
        delete=findViewById(R.id.delete);
        view=findViewById(R.id.view);
        listview=findViewById(R.id.listview);
        dbHelper=new DBHelper(this);
        insert.setOnClickListener(new View.OnClickListener()
        {
            @Override
            public void onClick(View v)
            {
               String post_id=postid.getText().toString();
               String authorTxt=author.getText().toString();
               String titleTxt=title.getText().toString();
               String contentTxt=content.getText().toString();
               String publishTxt=publish.getText().toString();
               Boolean checkinsert = dbHelper.insertdata(post_id,authorTxt,titleTxt,contentTxt,publishTxt);
                   if (checkinsert==true){
                       Toast.makeText(MainActivity.this,"Data Inserted",Toast.LENGTH_LONG).show();
                   }
                   else {
                       Toast.makeText(MainActivity.this,"Data Not Inserted",Toast.LENGTH_LONG).show();

                   }

            }
        });
        update.setOnClickListener(new View.OnClickListener()
        {
            @Override
            public void onClick(View v)
            {
                String post_id=postid.getText().toString();
                String authorTxt=author.getText().toString();
                String titleTxt=title.getText().toString();
                String contentTxt=content.getText().toString();
                String publishTxt=publish.getText().toString();
                Boolean checkupdate = dbHelper.updatedata(post_id,authorTxt,titleTxt,contentTxt,publishTxt);

                    if (checkupdate == true) {
                        Toast.makeText(MainActivity.this, "Data Updated", Toast.LENGTH_LONG).show();
                    } else {
                        Toast.makeText(MainActivity.this, "Data Not Updated", Toast.LENGTH_LONG).show();

                    }

            }

        });
        delete.setOnClickListener(new View.OnClickListener()
        {
            @Override
            public void onClick(View v)
            {
                String post_id=postid.getText().toString();
                String authorTxt=author.getText().toString();
                String titleTxt=title.getText().toString();
                String contentTxt=content.getText().toString();
                String publishTxt=publish.getText().toString();
                Boolean checkdelete = dbHelper.deletedata(post_id);

                if (checkdelete== true) {
                    Toast.makeText(MainActivity.this, "Data Deleted", Toast.LENGTH_LONG).show();

                }

                else {
                    Toast.makeText(MainActivity.this, "Data Not Deleted", Toast.LENGTH_LONG).show();

                }

            }

        });
        // MainActivity.java

        view.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                Cursor res = dbHelper.getdata();
                if (res.getCount() == 0) {
                    Toast.makeText(MainActivity.this, "No Data Exist", Toast.LENGTH_LONG).show();
                    return;
                }

                // Create a string to hold all data
                StringBuilder data = new StringBuilder();
                while (res.moveToNext()) {
                    data.append("Post_Id :").append(res.getString(0)).append("\n");
                    data.append("Author :").append(res.getString(1)).append("\n");
                    data.append("Title :").append(res.getString(2)).append("\n");
                    data.append("Context :").append(res.getString(3)).append("\n");
                    data.append("Publish :").append(res.getString(4)).append("\n\n");
                }

                // Create intent to start DisplayDataActivity
                Intent intent = new Intent(MainActivity.this, ViewDataActivity.class);
                // Pass the data as an extra to the intent
                intent.putExtra("data", data.toString());
                startActivity(intent);
            }
        });

//        view.setOnClickListener(new View.OnClickListener()
//        {
//            @Override
//            public void onClick(View v) {
//                Cursor res=dbHelper.getdata();
//                if (res.getCount()==0){
//                    Toast.makeText(MainActivity.this,"No Data Exist",Toast.LENGTH_LONG).show();
//return;
//                }
//                StringBuffer buffer=new StringBuffer();
//                while (res.moveToNext()){
//                    buffer.append("Post_Id :"+res.getString(0)+"\n");
//                    buffer.append("Author :"+res.getString(1)+"\n");
//                    buffer.append("Title :"+res.getString(2)+"\n");
//                    buffer.append("Context :"+res.getString(3)+"\n");
//                    buffer.append("Publish :"+res.getString(4)+"\n");
//
//                }
//                AlertDialog.Builder builder=new AlertDialog.Builder(MainActivity.this);
//                builder.setCancelable(true);
//                builder.setTitle("User Entries");
//                builder.setMessage(buffer.toString());
//                builder.show();
//
//            }
//
//        });





    }

    public void next(View view) {
        Intent intent = new Intent(MainActivity.this, com.example.sql_lite.ViewDataActivity.class);
        startActivity(intent);
    }
}

*/DBHelper
package com.example.sql_lite;

import android.content.ContentValues;
import android.content.Context;
import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteOpenHelper;

import androidx.annotation.Nullable;

public class DBHelper extends SQLiteOpenHelper {

    public DBHelper(Context context) {
        super(context, "Userdata.db", null, 1);
    }

    @Override
    public void onCreate(SQLiteDatabase db) {
db.execSQL("create Table Userdetails(postid TEXT primary key ,author TEXT ,title TEXT,content TEXT,publish TEXT)");
    }

    @Override
    public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {
db.execSQL("drop Table if exists Userdetails");
    }
    public Boolean insertdata(String postid ,String author ,String title ,String content,String publish ){
        SQLiteDatabase db=this.getWritableDatabase();
        ContentValues contentValues=new ContentValues();
        contentValues.put("postid",postid);
        contentValues.put("author",author);
        contentValues.put("title",title);
        contentValues.put("content",content);
        contentValues.put("publish",publish);
        long result =db.insert("Userdetails",null,contentValues);
        if (result == -1){
            return  false;
        }else {
            return true;
        }

    }
    public Boolean updatedata(String postid ,String author ,String title ,String content,String publish ) {
        SQLiteDatabase db = this.getWritableDatabase();
        ContentValues contentValues = new ContentValues();

        contentValues.put("author", author);
        contentValues.put("title", title);
        contentValues.put("content", content);
        contentValues.put("publish", publish);
        Cursor cursor = db.rawQuery("Select * from Userdetails where postid=?", new String[]{postid});
        if (cursor.getCount() > 0) {
            long result = db.update("Userdetails", contentValues, "postid=?", new String[]{postid});
            if (result == -1) {
                return false;
            } else {
                return true;
            }
        } else {
            return false;
        }
    }
    public Boolean deletedata(String postid ) {
            SQLiteDatabase db = this.getWritableDatabase();


            Cursor cursor = db.rawQuery("Select * from Userdetails where postid=?", new String[]{postid});
            if (cursor.getCount() > 0) {
                long result = db.delete("Userdetails", "postid=?", new String[]{postid});
                if (result == -1) {
                    return false;
                } else {
                    return true;
                }
            } else {
                return false;
            }
    }
    public Cursor getdata(){
        SQLiteDatabase db = this.getWritableDatabase();
        Cursor cursor = db.rawQuery("Select * from Userdetails ",null);
return cursor;
    }
}



*/viewdata
package com.example.sql_lite;

//import android.annotation.SuppressLint;
//import android.database.Cursor;
//import android.os.Bundle;
//import android.widget.ArrayAdapter;
//import android.widget.ListView;
//
//import androidx.appcompat.app.AppCompatActivity;
//import androidx.cursoradapter.widget.CursorAdapter;
//import androidx.cursoradapter.widget.SimpleCursorAdapter;
//
//import java.util.ArrayList;
//
//// ViewDataActivity.java
//public class ViewDataActivity extends AppCompatActivity {
//    ListView listView;
//    DBHelper dbHelper;
//    private ArrayList<Object> itemList;
//    private ArrayAdapter<Object> listadapter;
//    CursorAdapter adapter;
//
//    @SuppressLint("MissingInflatedId")
//    @Override
//    protected void onCreate(Bundle savedInstanceState) {
//        super.onCreate(savedInstanceState);
//        setContentView(R.layout.listview); // Make sure to set the correct layout here
//
//        listView = findViewById(R.id.listView);
//        dbHelper = new DBHelper(this);
////
////        // Retrieve data from the database
//        Cursor cursor = dbHelper.getdata();
////        itemList = new ArrayList<>();
////        listadapter = new ArrayAdapter<>(this, android.R.layout.simple_list_item_1, itemList);
////        listView.setAdapter(listadapter);
//         adapter = new SimpleCursorAdapter(
//                this, // Context
//                R.layout.list_item, // Layout resource ID
//                cursor, // Cursor object
//                new String[]{"postid", "author", "title", "content", "publish"}, // Column names in the cursor
//                new int[]{R.id.postid_text_view, R.id.author_text_view, R.id.title_text_view, R.id.content_text_view, R.id.publish_text_view}, // Corresponding views in the layout
//                0 // Flags (deprecated, should be set to 0)
//        );
//
//
////        itemList.add(adapter);
////        listadapter.notifyDataSetChanged();
////
////        // Populate data into ListView using CursorAdapter
//
////
//        listView.setAdapter(adapter);
//    }
//}
////
////
////}
//// ViewDataActivity.java
////import android.os.Bundle;
////import android.widget.ArrayAdapter;
////import android.widget.ListView;
////import androidx.appcompat.app.AppCompatActivity;
////import java.util.List;
////
////public class ViewDataActivity extends AppCompatActivity {
////    ListView listView;
////    DBHelper dbHelper;
////
////    @Override
////    protected void onCreate(Bundle savedInstanceState) {
////        super.onCreate(savedInstanceState);
////        setContentView(R.layout.listview);
////
////        listView = findViewById(R.id.listView);
////        dbHelper = new DBHelper(this);
////
////        // Retrieve all posts from the database
////        List<Post> posts = (List<Post>) dbHelper.getdata();
////
////        // Create an ArrayAdapter to populate the ListView
////        ArrayAdapter<Post> adapter = new ArrayAdapter<Post>(
////                this,
////                android.R.layout.simple_list_item_1,
////                android.R.id.text1,
////                posts
////        );
////
////        // Set the adapter to the ListView
////        listView.setAdapter(adapter);
////    }
////}
//
// DisplayDataActivity.java

import android.annotation.SuppressLint;
import android.os.Bundle;
import android.widget.TextView;

import androidx.appcompat.app.AppCompatActivity;

public class ViewDataActivity extends AppCompatActivity {
    TextView textview;

    @SuppressLint("MissingInflatedId")
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.view);

        // Find TextView
        textview = findViewById(R.id.textview);

        // Retrieve the data from the intent
        String data = getIntent().getStringExtra("data");

        // Display the data in the TextView
        textview.setText(data);
    }
}

*/layout
<?xml version="1.0" encoding="utf-8"?>
<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    tools:context=".MainActivity">

    <EditText
        android:id="@+id/author"
        android:layout_width="0dp"
        android:layout_height="0dp"
        android:layout_marginStart="16dp"
        android:layout_marginEnd="16dp"
        android:layout_marginBottom="15dp"
        android:ems="10"
        android:hint="Author"
        android:inputType="text"
        app:layout_constraintBottom_toTopOf="@+id/title"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toBottomOf="@+id/postid" />

    <EditText
        android:id="@+id/title"
        android:layout_width="0dp"
        android:layout_height="0dp"
        android:layout_marginStart="16dp"
        android:layout_marginEnd="16dp"
        android:layout_marginBottom="26dp"
        android:ems="10"
        android:hint="Title"
        android:inputType="text"
        app:layout_constraintBottom_toTopOf="@+id/content"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toBottomOf="@+id/author" />

    <EditText
        android:id="@+id/content"
        android:layout_width="0dp"
        android:layout_height="0dp"
        android:layout_marginStart="16dp"
        android:layout_marginEnd="16dp"
        android:layout_marginBottom="10dp"
        android:ems="10"
        android:hint="Content"
        android:inputType="text"
        app:layout_constraintBottom_toTopOf="@+id/publish"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toBottomOf="@+id/title" />

    <EditText
        android:id="@+id/postid"
        android:layout_width="0dp"
        android:layout_height="0dp"

        android:layout_marginStart="12dp"
        android:layout_marginTop="66dp"
        android:layout_marginEnd="12dp"
        android:layout_marginBottom="12dp"
        android:ems="10"
        android:hint="Post_id"
        android:inputType="number"
        app:layout_constraintBottom_toTopOf="@+id/author"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toTopOf="parent" />

    <EditText
        android:id="@+id/publish"
        android:layout_width="0dp"
        android:layout_height="0dp"
        android:layout_marginStart="16dp"
        android:layout_marginEnd="16dp"
        android:layout_marginBottom="15dp"
        android:ems="10"
        android:hint="Published_At"
        android:inputType="text"
        app:layout_constraintBottom_toTopOf="@+id/insert"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toBottomOf="@+id/content" />

    <Button
        android:id="@+id/insert"
        android:layout_width="0dp"
        android:layout_height="0dp"
        android:layout_marginStart="8dp"
        android:layout_marginEnd="8dp"
        android:layout_marginBottom="19dp"
        android:text="Insert"
        app:layout_constraintBottom_toTopOf="@+id/update"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toBottomOf="@+id/publish" />

    <Button
        android:id="@+id/update"
        android:layout_width="0dp"
        android:layout_height="0dp"
        android:layout_marginStart="6dp"
        android:layout_marginEnd="6dp"
        android:text="Update"
        app:layout_constraintBottom_toTopOf="@+id/delete"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toBottomOf="@+id/insert" />

    <Button
        android:id="@+id/delete"
        android:layout_width="0dp"
        android:layout_height="0dp"
        android:layout_marginStart="12dp"
        android:layout_marginEnd="12dp"
        android:layout_marginBottom="19dp"
        android:text="Delete"
        app:layout_constraintBottom_toTopOf="@+id/view"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toBottomOf="@+id/update" />

    <Button
        android:id="@+id/view"
        android:layout_width="0dp"
        android:layout_height="0dp"
        android:layout_marginStart="11dp"
        android:layout_marginEnd="11dp"
        android:layout_marginBottom="31dp"
        android:text="View"
        app:layout_constraintBottom_toTopOf="@+id/listview"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toBottomOf="@+id/delete" />

    <Button
        android:id="@+id/listview"
        android:layout_width="377dp"
        android:layout_height="0dp"
        android:layout_marginEnd="16dp"
        android:layout_marginBottom="60dp"
        android:text="Button"
        android:onClick="next"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintTop_toBottomOf="@+id/view" />


</androidx.constraintlayout.widget.ConstraintLayout>

*/manifest
<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools">

    <application
        android:allowBackup="true"
        android:dataExtractionRules="@xml/data_extraction_rules"
        android:fullBackupContent="@xml/backup_rules"
        android:icon="@mipmap/ic_launcher"
        android:label="@string/app_name"
        android:roundIcon="@mipmap/ic_launcher_round"
        android:supportsRtl="true"
        android:theme="@style/Theme.Sql_Lite"
        tools:targetApi="31">
        <activity
            android:name=".MainActivity"
            android:exported="true">
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />

                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>
        <activity android:name=".ViewDataActivity"
            android:exported="true">
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />
                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>

    </application>

</manifest>


*/view.xml
<?xml version="1.0" encoding="utf-8"?>
<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent">

    <TextView
        android:id="@+id/textview"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="TextView"
        tools:layout_editor_absoluteX="60dp"
        tools:layout_editor_absoluteY="72dp"
        tools:ignore="MissingConstraints" />
</androidx.constraintlayout.widget.ConstraintLayout>